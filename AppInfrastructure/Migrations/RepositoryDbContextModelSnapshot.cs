// <auto-generated />
using System;
using AppInfrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodaTime;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AppInfrastructure.Migrations
{
    [DbContext(typeof(RepositoryDbContext))]
    partial class RepositoryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AppDomain.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccountType")
                        .HasColumnType("text");

                    b.Property<Instant>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("554dc1b5-aae0-47d1-8b0c-988d100975c6"),
                            AccountType = "",
                            CreatedAt = NodaTime.Instant.FromUnixTimeTicks(16393300679916038L),
                            Email = "Muhammad.White@yahoo.com",
                            Password = "BQzcsUYmLT"
                        },
                        new
                        {
                            Id = new Guid("ce3d6295-36ae-4ff5-8056-63a0894dea63"),
                            AccountType = "",
                            CreatedAt = NodaTime.Instant.FromUnixTimeTicks(16436878366004708L),
                            Email = "Jazlyn67@gmail.com",
                            Password = "Pvo7bEQDqI"
                        },
                        new
                        {
                            Id = new Guid("28c2c279-23c4-4694-b409-dbfe0d6074d4"),
                            AccountType = "",
                            CreatedAt = NodaTime.Instant.FromUnixTimeTicks(16565859916859428L),
                            Email = "Ciara.Gleichner45@hotmail.com",
                            Password = "oXGP6SR4Mo"
                        },
                        new
                        {
                            Id = new Guid("d44de473-1b91-48e2-b55a-49bbf5a52f64"),
                            AccountType = "",
                            CreatedAt = NodaTime.Instant.FromUnixTimeTicks(16396551442101077L),
                            Email = "Deangelo.Hoeger@hotmail.com",
                            Password = "cYCk_fMYy9"
                        },
                        new
                        {
                            Id = new Guid("bc5e0ff3-b7d6-4ef1-9526-accfda1ff051"),
                            AccountType = "",
                            CreatedAt = NodaTime.Instant.FromUnixTimeTicks(16371746448875471L),
                            Email = "Mossie59@gmail.com",
                            Password = "xEZNKolh2e"
                        },
                        new
                        {
                            Id = new Guid("2067e7d9-6779-42e7-9620-806d6ea8323f"),
                            AccountType = "",
                            CreatedAt = NodaTime.Instant.FromUnixTimeTicks(16413630421975509L),
                            Email = "Jamar_Cole37@yahoo.com",
                            Password = "ZNbZ3dgqhO"
                        },
                        new
                        {
                            Id = new Guid("4ebe9237-d38e-4556-a7e8-03cab9e7f304"),
                            AccountType = "",
                            CreatedAt = NodaTime.Instant.FromUnixTimeTicks(16354202442014359L),
                            Email = "Monica.Ondricka33@hotmail.com",
                            Password = "oKdwtnDIwK"
                        },
                        new
                        {
                            Id = new Guid("f7ceda94-fde7-44e5-acdc-9dcc3b2907c5"),
                            AccountType = "",
                            CreatedAt = NodaTime.Instant.FromUnixTimeTicks(16515092102283558L),
                            Email = "Mona41@yahoo.com",
                            Password = "TXXMYmEIZR"
                        },
                        new
                        {
                            Id = new Guid("7466525d-d01e-4cdb-b134-11c448747d28"),
                            AccountType = "",
                            CreatedAt = NodaTime.Instant.FromUnixTimeTicks(16359337364693553L),
                            Email = "Jovany.Auer77@hotmail.com",
                            Password = "BuwwACbGSz"
                        },
                        new
                        {
                            Id = new Guid("c016bc81-6c31-4433-bbfc-c6b2428f8e02"),
                            AccountType = "",
                            CreatedAt = NodaTime.Instant.FromUnixTimeTicks(16456332113416938L),
                            Email = "Mia_Ebert@yahoo.com",
                            Password = "1muuVO_0uS"
                        });
                });

            modelBuilder.Entity("AppDomain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid");

                    b.Property<Instant?>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5651b272-1b9c-498c-8b71-2bfcecffb9e9"),
                            AccountId = new Guid("554dc1b5-aae0-47d1-8b0c-988d100975c6"),
                            DateOfBirth = NodaTime.Instant.FromUnixTimeTicks(16546588409145686L),
                            FirstName = "Lou",
                            LastName = "Bosco"
                        },
                        new
                        {
                            Id = new Guid("fab9814d-be56-4f61-8d38-925b1ccaa43d"),
                            AccountId = new Guid("ce3d6295-36ae-4ff5-8056-63a0894dea63"),
                            DateOfBirth = NodaTime.Instant.FromUnixTimeTicks(16470791903117221L),
                            FirstName = "Mikel",
                            LastName = "Haley"
                        },
                        new
                        {
                            Id = new Guid("64deb4a6-5688-4921-b67f-2c04de364f69"),
                            AccountId = new Guid("28c2c279-23c4-4694-b409-dbfe0d6074d4"),
                            DateOfBirth = NodaTime.Instant.FromUnixTimeTicks(16491459564604299L),
                            FirstName = "Henderson",
                            LastName = "Hartmann"
                        },
                        new
                        {
                            Id = new Guid("6655a7c2-f784-43f0-9fd8-1d4e94f2c8f4"),
                            AccountId = new Guid("d44de473-1b91-48e2-b55a-49bbf5a52f64"),
                            DateOfBirth = NodaTime.Instant.FromUnixTimeTicks(16489505447636581L),
                            FirstName = "Della",
                            LastName = "Armstrong"
                        },
                        new
                        {
                            Id = new Guid("3568c9f7-2bc6-440c-9c61-480eb4977035"),
                            AccountId = new Guid("bc5e0ff3-b7d6-4ef1-9526-accfda1ff051"),
                            DateOfBirth = NodaTime.Instant.FromUnixTimeTicks(16371678946131415L),
                            FirstName = "Olen",
                            LastName = "Goodwin"
                        },
                        new
                        {
                            Id = new Guid("204f6065-535a-4664-b4ae-c4e03651ff80"),
                            AccountId = new Guid("2067e7d9-6779-42e7-9620-806d6ea8323f"),
                            DateOfBirth = NodaTime.Instant.FromUnixTimeTicks(16336458467228436L),
                            FirstName = "Xavier",
                            LastName = "Emard"
                        },
                        new
                        {
                            Id = new Guid("d4be7e8f-ade7-463a-af91-7d311f1a787a"),
                            AccountId = new Guid("4ebe9237-d38e-4556-a7e8-03cab9e7f304"),
                            DateOfBirth = NodaTime.Instant.FromUnixTimeTicks(16524434299847401L),
                            FirstName = "Asha",
                            LastName = "Donnelly"
                        },
                        new
                        {
                            Id = new Guid("82a70217-126b-4f47-8923-7a8709758629"),
                            AccountId = new Guid("f7ceda94-fde7-44e5-acdc-9dcc3b2907c5"),
                            DateOfBirth = NodaTime.Instant.FromUnixTimeTicks(16496788319838336L),
                            FirstName = "Ervin",
                            LastName = "D'Amore"
                        },
                        new
                        {
                            Id = new Guid("c1db7065-f5d3-401a-b12e-dc39fb23c232"),
                            AccountId = new Guid("7466525d-d01e-4cdb-b134-11c448747d28"),
                            DateOfBirth = NodaTime.Instant.FromUnixTimeTicks(16372585200939143L),
                            FirstName = "Elody",
                            LastName = "Kirlin"
                        },
                        new
                        {
                            Id = new Guid("3b29a9d6-f5b6-41b0-bf44-10a9008bc67a"),
                            AccountId = new Guid("c016bc81-6c31-4433-bbfc-c6b2428f8e02"),
                            DateOfBirth = NodaTime.Instant.FromUnixTimeTicks(16277325494770129L),
                            FirstName = "Edwardo",
                            LastName = "Nikolaus"
                        });
                });

            modelBuilder.Entity("AppDomain.Entities.User", b =>
                {
                    b.HasOne("AppDomain.Entities.Account", "Account")
                        .WithOne("User")
                        .HasForeignKey("AppDomain.Entities.User", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("AppDomain.Entities.Account", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
